#!/usr/bin/env groovy

def build_ver_core
def build_ver_vad
def build_ver

pipeline {
    agent { node { label 'cxs-slave-master' } }
    parameters {
        string(name: 'MAJOR_VERSION_NUMBER', defaultValue:'8.0.0', description: 'Major version number of release')
        booleanParam(name: 'RELEASE', defaultValue:false, description: 'Publish produced artifacts to Maven Central repository')
    }
    stages {
        stage("build-media-parent") {
            steps {
                script {
                    def media_build_job = build(job: "media-parent",
                        parameters:
                        [string(name: 'MAJOR_VERSION_NUMBER', value: "${params.MAJOR_VERSION_NUMBER}"),
                         booleanParam(name: 'RELEASE', value: "${params.RELEASE}")])
                    def build_nbr = media_build_job.getNumber()    
                    println "build nbr:" + "${build_nbr}"
                    build_ver = "${MAJOR_VERSION_NUMBER}" + "-" + "${build_nbr}"
                    println "build version: ${build_ver}"
                }
            }
        }
        stage("build-media-core") {
            steps {
                script {
                    println "build version from  parent:" + "${build_ver}"
                    def media_build_job = build(job: "media-core",
                        parameters:
                        [string(name: 'MAJOR_VERSION_NUMBER', value: "${params.MAJOR_VERSION_NUMBER}"),
                         booleanParam(name: 'RELEASE', value: "${params.RELEASE}")])
                    def build_nbr_core = media_build_job.getNumber()
                    println "build nbr:" + "${build_nbr_core}"
                    build_ver_core = "${MAJOR_VERSION_NUMBER}" + "-" + "${build_nbr_core}"
                    println "build version: ${build_ver_core}"
                }
            }
        }
        stage("build-media-plugin-vad-noise-threshold") {
            steps {
                script {
                    def media_build_job = build(job: "media-plugin-vad-noise-threshold",
                        parameters:
                        [string(name: 'MAJOR_VERSION_NUMBER', value: "${params.MAJOR_VERSION_NUMBER}"),
                         string(name: 'MEDIA_CORE_VERSION', value: "${build_ver_core}"),
                         booleanParam(name: 'RELEASE', value: "${params.RELEASE}")])
                    def build_nbr_vad = media_build_job.getNumber()    
                    println "build nbr:" + "${build_nbr_vad}"
                    build_ver_vad = "${MAJOR_VERSION_NUMBER}" + "-" + "${build_nbr_vad}"
                    println "build version: ${build_ver_vad}"
                }
            }
        }
        stage("build-media-server-standalone") {
            steps {
                script {
                    def media_build_job = build(job: "media-server-standalone",
                        parameters:
                        [string(name: 'MAJOR_VERSION_NUMBER', value: "${params.MAJOR_VERSION_NUMBER}"),
                         string(name: 'MEDIA_CORE_VERSION', value: "${build_ver_core}"),
                         string(name: 'MEDIA_PLUGIN_VAD_VERSION', value: "${build_ver_vad}"),
                         booleanParam(name: 'RELEASE', value: "${params.RELEASE}")])
                    def build_nbr_serv = media_build_job.getNumber()    
                    println "build nbr:" + "${build_nbr_serv}"
                    def build_ver_serv = "${MAJOR_VERSION_NUMBER}" + "-" + "${build_nbr_serv}"
                    println "build version: ${build_ver_serv}"
                }
            }
        }
    }
}
